# Generated by Django 5.2.1 on 2025-05-29 06:57

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('capsules', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='capsule',
            name='delivery_method',
            field=models.CharField(choices=[('email', 'Email'), ('in_app', 'In-App Notification'), ('sms', 'SMS')], default='email', help_text='The primary method for delivering the capsule content.', max_length=50),
        ),
        migrations.AlterField(
            model_name='capsulecontent',
            name='content_type',
            field=models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document')], help_text='The type of content stored (text, image, video, audio, document).', max_length=50),
        ),
        migrations.AlterField(
            model_name='capsulecontent',
            name='file',
            field=models.FileField(blank=True, help_text="File content for 'image', 'video', 'audio', 'document' types. Null for text content.", null=True, upload_to='capsule_files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'webp', 'mp4', 'avi', 'mov', 'webm', 'mp3', 'wav', 'ogg', 'pdf', 'doc', 'docx', 'txt', 'rtf'])]),
        ),
        migrations.AlterField(
            model_name='capsulecontent',
            name='text_content',
            field=models.TextField(blank=True, help_text="Text content for 'text' type capsules. Null for file-based content.", null=True),
        ),
        migrations.AlterField(
            model_name='capsulecontent',
            name='thumbnail',
            field=models.ImageField(blank=True, help_text='Optional thumbnail for media files (e.g., video previews).', null=True, upload_to='capsule_thumbnails/'),
        ),
        migrations.AddConstraint(
            model_name='capsulecontent',
            constraint=models.CheckConstraint(condition=models.Q(('text_content__isnull', False), ('file__isnull', False), _connector='OR'), name='text_or_file_content_required'),
        ),
    ]
